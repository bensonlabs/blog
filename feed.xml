<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>bensonlabs.org</title>
    <link href="https://bensonlabs.github.io/blog/feed.xml" rel="self" />
    <link href="https://bensonlabs.github.io/blog" />
    <updated>2020-05-15T21:13:14-07:00</updated>
    <author>
        <name>Justin Benson</name>
    </author>
    <id>https://bensonlabs.github.io/blog</id>

    <entry>
        <title>Powershell - Log IP status</title>
        <author>
            <name>Justin Benson</name>
        </author>
        <link href="https://bensonlabs.github.io/blog/powershell-log-ip-status.html"/>
        <id>https://bensonlabs.github.io/blog/powershell-log-ip-status.html</id>

        <updated>2020-05-07T07:32:27-07:00</updated>
            <summary>
                <![CDATA[
                    #Gets a list of computer names or IPs from a .txt file. $names = Get-content "&lt;location of .txt file full of IP addresses&gt;" #Sets the name and the location of your output .CSV file. $IPstatus = "&lt;location of .csv file&gt;" $date = Get-Date #Pings each&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>#Gets a list of computer names or IPs from a .txt file.<br>$names = Get-content "&lt;location of .txt file full of IP addresses&gt;"<br><br>#Sets the name and the location of your output .CSV file.<br>$IPstatus = "&lt;location of .csv file&gt;"<br><br>$date = Get-Date<br><br>#Pings each device in your list. <br>foreach ($name in $names){<br> if (Test-Connection -ComputerName $name -Count 1 -ErrorAction SilentlyContinue){</p>
<p># logs all UP IPs with time stamp<br> Add-Content -Value "$name,up,$date" -Path $IPstatus<br> }</p>
<p># logs all DOWN IPs with timestamp<br> else{<br> Add-Content -Value "$name,down,$date" -Path $IPstatus<br> }<br>}</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>macOS - Remove SearchMine malware script</title>
        <author>
            <name>Justin Benson</name>
        </author>
        <link href="https://bensonlabs.github.io/blog/macos-remove-searchmine-malware-script.html"/>
        <id>https://bensonlabs.github.io/blog/macos-remove-searchmine-malware-script.html</id>

        <updated>2020-05-06T14:45:08-07:00</updated>
            <summary>
                <![CDATA[
                    Save these steps somewhere safe and close Chrome.Click the "Preferences" icon in your Mac's menu bar and select "Profiles".Select all "AdminPrefs" profile(s) and delete it/them by clicking the minus (-) icon at the bottom.Once you've removed the unwanted "adminprefs" profile(s), you should be able to&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <ol>
<li>Save these steps somewhere safe and close Chrome.</li>
<li>Click the "Preferences" icon in your Mac's menu bar and select "Profiles".</li>
<li>Select all "AdminPrefs" profile(s) and delete it/them by clicking the minus (-) icon at the bottom.</li>
<li>Once you've removed the unwanted "adminprefs" profile(s), you should be able to follow these steps:</li>
<li>Open the Terminal app (Go &gt; Utilities &gt; Terminal or press Command+Space and search Terminal)</li>
<li>Enter the commands below and hit the Enter key after each one:</li>
</ol>
<p>(or put it into a .sh script, then run as sudo):</p>
<pre>#!/bin/bash<br><br>defaults write com.google.Chrome HomepageIsNewTabPage -bool false<br>defaults write com.google.Chrome NewTabPageLocation -string https://www.google.com/"<br>defaults write com.google.Chrome HomepageLocation -string “https://www.google.com/”<br>defaults delete com.google.Chrome DefaultSearchProviderSearchURL<br>defaults delete com.google.Chrome DefaultSearchProviderNewTabURL<br>defaults delete com.google.Chrome DefaultSearchProviderName</pre>
<p>Now restart Chrome and the issue should be resolved. If not, you may need to restart your Mac.</p>
<p>Reference: https://support.google.com/chrome/thread/9350623?hl=en</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>DirectAccess stuck connecting</title>
        <author>
            <name>Justin Benson</name>
        </author>
        <link href="https://bensonlabs.github.io/blog/directaccess-stuck-trying-to-connect.html"/>
        <id>https://bensonlabs.github.io/blog/directaccess-stuck-trying-to-connect.html</id>

        <updated>2020-05-05T11:22:08-07:00</updated>
            <summary>
                <![CDATA[
                    Remote into computer with DirectAccess issues.Copy the install folder of your VPN over remote connection.Install and connect through VPN and run this 2 times in CMD with admin privileges: GPUPDATE /FORCESign out/sign inUninstall the VPN (DirectAccess might not let you connect to folders until VPN is&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <ol>
<li>Remote into computer with DirectAccess issues.</li>
<li>Copy the install folder of your VPN over remote connection.</li>
<li>Install and connect through VPN and run this 2 times in CMD with admin privileges: GPUPDATE /FORCE</li>
<li>Sign out/sign in</li>
<li>Uninstall the VPN (DirectAccess might not let you connect to folders until VPN is disconnected.  Better to just uninstall it.</li>
</ol>
            ]]>
        </content>
    </entry>
</feed>
